# docker-compose.dev.yml
services:
  nextjs:
    build:
      context: .
    ports:
      - "3000:3000"
    env_file:
      - ./.env.development
    depends_on:
      hasura:
        condition: service_healthy
      libretranslate:
        condition: service_started
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:54321
      - NEXT_PUBLIC_HASURA_GRAPHQL_ENDPOINT=http://localhost:8081/v1/graphql
      - NEXT_PUBLIC_HASURA_GRAPHQL_WS_ENDPOINT=ws://localhost:8081/v1/graphql
      # JWT 設定
      - NEXTAUTH_SECRET=wbmvACz5zBHLgMFowQDj4OaTtNAt9EplKs1fyQi6qgPIP4eFoX31+OBWKfUAXYGBmcDCYyMDfQ7Zi5rjj4TOdw==
      - JWT_TYPE=HS256

  # ▼ Hasura コンテナ（ローカルSupabaseに接続）
  hasura:
    image: hasura/graphql-engine:v2.46.0
    platform: linux/arm64
    ports:
      - "8081:8081"
    env_file:
      - ./.env.development
    depends_on:
      supabase:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    entrypoint: >
      sh -c "until nc -z supabase 5432; do echo 'Waiting for Supabase...'; sleep 2; done;
      graphql-engine serve"
    environment:
      # データベース接続設定
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgres@supabase:5432/sppa
      # 開発モード設定
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - HASURA_GRAPHQL_DEV_MODE=true
      # 認証設定
      - HASURA_GRAPHQL_ADMIN_SECRET=hasura-secret-key
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anonymous
      # CORS設定
      - HASURA_GRAPHQL_CORS_DOMAIN=*
      # API設定
      - HASURA_GRAPHQL_ENABLED_APIS=metadata,graphql,pgdump,developer,config,metrics
      # ログ設定
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup,http-log,webhook-log,websocket-log,query-log
      # JWT設定（注: 単一行で記述、エスケープなし）
      - HASURA_GRAPHQL_JWT_SECRET={"type":"HS256","key":"wbmvACz5zBHLgMFowQDj4OaTtNAt9EplKs1fyQi6qgPIP4eFoX31+OBWKfUAXYGBmcDCYyMDfQ7Zi5rjj4TOdw==","claims_namespace":"https://hasura.io/jwt/claims"}
      # WebSocket設定
      - HASURA_GRAPHQL_WS_READ_COOKIE=false
      - HASURA_GRAPHQL_ENABLE_ALLOWLIST=false
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false

  # ▼ ローカル開発用 Supabase (PostgreSQL + PostGIS)
  supabase:
    image: imresamu/postgis-arm64:16-3.4
    platform: linux/arm64
    ports:
      - "54322:5432"
    env_file:
      - ./.env.development
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-sppa}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-sppa}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ▼ LibreTranslate（翻訳API）
  libretranslate:
    image: libretranslate/libretranslate:latest
    platform: linux/arm64
    ports:
      - "8000:5000"
    env_file:
      - ./.env.development
    environment:
      - LT_DEBUG=${LT_DEBUG:-true}
      - LT_PORT=${LT_PORT:-5000}
    command: ["--load-only", "en,id,ja,fr,de,zh"]

volumes:
  postgres_data:

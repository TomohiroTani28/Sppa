# docker-compose.dev.yml
version: "3.8"

services:
  nextjs:
    build:
      context: .
    ports:
      - "3000:3000"
    env_file:
      - ./.env.development
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=http://supabase:5432
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRla3l3Z3Z5cnJ5ZWR1dHFhY2liIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDAwNTY8MTUsImV4cCI6MjA1NTYzMjgxNX0.SDUwAwZhsxKbqz6FOYXbIDEpG8LkNhSUMt9_G-w9N5Q
    volumes:
      - ./jwt-secret.json:/jwt-secret.json:ro
    depends_on:
      hasura:
        condition: service_healthy
      libretranslate:
        condition: service_started

  # ▼ Hasura コンテナ（ローカルSupabaseに接続）
  hasura:
    image: hasura/graphql-engine:v2.46.0
    platform: linux/arm64
    ports:
      - "8081:8081"
    env_file:
      - ./.env.development
    environment:
      # ホスト環境変数に依存せず、直接値を記述しています
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:postgres@supabase:5432/sppa"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "3lKK6v5dGIe6EqmrA2UXWxuSCO4prhgasehH0spIJOJojxYdDGW0sVg5hCU4EoBf"
      HASURA_GRAPHQL_JWT_SECRET_FILE: "/jwt-secret.json"
      HASURA_GRAPHQL_SERVER_PORT: "8081"
      HASURA_GRAPHQL_SERVER_HOST: "0.0.0.0"
      HASURA_GRAPHQL_ENABLED_APIS: "metadata,graphql,pgdump,config"
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
    depends_on:
      supabase:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    entrypoint: >
      sh -c "until nc -z supabase 5432; do echo 'Waiting for Supabase...'; sleep 2; done;
      graphql-engine serve"
    volumes:
      - ./jwt-secret.json:/jwt-secret.json:ro

  # ▼ ローカル開発用 Supabase (PostgreSQL + PostGIS)
  supabase:
    image: imresamu/postgis-arm64:16-3.4
    platform: linux/arm64
    ports:
      - "54330:5432"
    env_file:
      - ./.env.development
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "sppa"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sppa"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s

  # ▼ LibreTranslate（翻訳API）
  libretranslate:
    image: libretranslate/libretranslate:latest
    platform: linux/arm64
    ports:
      - "8000:5000"
    env_file:
      - ./.env.development
    environment:
      LT_DEBUG: "true"
      LT_PORT: "5000"
    command: ["--load-only", "en,id,ja,fr,de,zh"]

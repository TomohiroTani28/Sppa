# docker-compose.prod.yml
version: "3.8"

services:
  # ▼ Next.js コンテナ（本番用）
  nextjs:
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      hasura:
        condition: service_healthy
      libretranslate:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app_network

  # ▼ Hasura コンテナ（Supabase Cloudに接続）
  hasura:
    image: hasura/graphql-engine:v2.46.0
    platform: linux/arm64
    ports:
      - "8081:8081"
    env_file:
      - .env.production
    environment:
      # Supabase Cloudの接続URLは.env.productionで指定
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      HASURA_GRAPHQL_SERVER_PORT: "8081"
      HASURA_GRAPHQL_SERVER_HOST: "0.0.0.0"
      HASURA_GRAPHQL_ENABLED_APIS: "metadata,graphql,pgdump,config"
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_DEV_MODE: "false"
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app_network

  # ▼ 本番でもLibreTranslateをローカルコンテナで動かす場合
  libretranslate:
    image: libretranslate/libretranslate:latest
    platform: linux/arm64
    ports:
      - "8000:5000"
    env_file:
      - ../.env.production
    environment:
      LT_DEBUG: "false"
      LT_PORT: "5000"
      LT_LOAD_ONLY: "en,id,ja,fr,de,zh"
      LT_DISABLE_WEB_UI: "true"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
